name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs: 
  terraform: 
    name: Terraform
    runs-on: ubuntu-latest
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        id: fmt
        name: "Terraform Format"
        run: "terraform fmt -check"
        continue-on-error: true
      - 
        id: init
        name: "Terraform Init"
        run: "terraform init"
      - 
        id: validate
        name: "Terraform Validate"
        run: "terraform validate -no-color"
      - 
        id: plan
        if: "github.event_name == 'pull_request'"
        name: "Terraform Plan"
        run: "terraform plan -no-color"
        continue-on-error: true
        
      - 
        name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.16.0
        with:
            # Slack channel id, channel name, or user id to post message.
            # See also: https://api.slack.com/methods/chat.postMessage#channels
            channel-id: 'CHANNEL_ID'
            # For posting a rich message using Block Kit
            payload: |
              {
                "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
              }
        env:
            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - 
        if: "steps.plan.outcome == 'failure'"
        name: "Terraform Plan Status"
        run: "exit 1"
      - 
        if: "github.ref == 'refs/heads/main' && github.event_name == 'push'"
        name: "Terraform Apply"
        run: "terraform apply -auto-approve"
        env: 
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          
      - 
        id: script
        name: "Terraform script"
        run: "bash drift.sh " 
        
        

     

