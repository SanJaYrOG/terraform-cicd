name: "Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs: 
  terraform: 
    name: Terraform
    runs-on: ubuntu-latest
    steps: 
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        id: fmt
        name: "Terraform Format"
        run: "terraform fmt -check"
        continue-on-error: true
      - 
        id: init
        name: "Terraform Init"
        run: "terraform init"
      - 
        id: validate
        name: "Terraform Validate"
        run: "terraform validate -no-color"
      - 
        id: plan
#         if: "github.event_name == 'pull_request'"
        name: "Terraform Plan"
        run: "terraform plan -out=plan_out"
        env: 
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
               
      -
        id: show
#         if: "github.event_name == 'pull_request'"
        name: "Terraform Show"
        run: echo "TFPLAN=$(terraform show plan_out)" >> $GITHUB_ENV          
        env: 
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      -
        name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n ${{ env.TFPLAN }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: "${{ secrets.SLACK_WEBHOOK_URL }}"
          SLACK_WEBHOOK_TYPE: "INCOMING_WEBHOOK"
          
#       - 
#         id: script
#         name: "Terraform script"
#         run: "bash drift.sh ${{ secrets.SLACK_WEBHOOK_URL }}" 
#         env: 
#           AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
#           AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      - 
        if: "steps.plan.outcome == 'failure'"
        name: "Terraform Plan Status"
        run: "exit 1"
      #- 
        #if: "github.ref == 'refs/heads/main' && github.event_name == 'push'"
        #name: "Terraform Apply"
        #run: "terraform apply -auto-approve"
        #env: 
          #AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          #AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          
      
        
        

     

